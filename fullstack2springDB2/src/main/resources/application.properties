server.port = 80

#우리가 사용할 View 이름이 타임리프(Thymeleaf) 입니다. 이넘의 cache 값을 false로
spring.thymeleaf.cache=false

#DB연결코드
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/test
spring.datasource.username=tint
spring.datasource.password=46119684

#실행되는 DB쿼리를 콘솔에 출력하도록 설정합니다.
spring.jpa.show-sql=true

#프로젝트 실생시에 자동으로 DDL 생성 여부를 결정하는 속성 설정합니다.
#create 는 매번 생성, update 는 변경이 필요시 alter로 처리, 테이블이 없는 경우엔 create되어집니다.
spring.jpa.hibernate.ddl-auto=update

#실제 Jpa 구현체인 하이버네이트가 동작하면서 발생하는 SQL 을 콘솔에 출력하도록 설정
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true

#바인딩되는 파라미터 값 출력하는 속성
logging.level.org.hibernate.type.descriptor.sql=trace
spring.jpa.open-in-view=true

#웹요청의 모든 내용을 debug 모드로 콘솔에 출력
logging.level.web=debug

logging.level.org.hibernate.SQL = DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace

#Post 요청이 요청 파라미터 보이기 속성설정
spring.mvc.log-request-details=true
spring.jpa.properties.hibernate.highlight_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true